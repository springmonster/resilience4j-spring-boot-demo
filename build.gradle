buildscript {
    ext {
        springBootVersion = '1.5.20.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'resilience4j-spring-boot-demo'
    version = '0.17.0'
}

sourceCompatibility = 1.8

repositories {
    maven {
        url "https://maven.aliyun.com/nexus/content/repositories/central/"
    }
    mavenCentral()
    //jcenter()
    //maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

ext {
    resilience4jVersion = '0.17.0'
    microMeterVersion = '1.1.4'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('io.reactivex.rxjava2:rxjava:2.2.8')

    // http://localhost:9080/management/prometheus
    compile("io.micrometer:micrometer-spring-legacy:${microMeterVersion}")
    compile("io.micrometer:micrometer-registry-prometheus:${microMeterVersion}")

    compile("io.github.resilience4j:resilience4j-spring-boot:${resilience4jVersion}")
    compile("io.github.resilience4j:resilience4j-micrometer:${resilience4jVersion}")
    compile("io.github.resilience4j:resilience4j-rxjava2:${resilience4jVersion}") // Optional

    compile("io.vavr:vavr-jackson:0.9.1")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}
